Ext.data.JsonP.Sm_log_TemplateLayout({"tagname":"class","name":"Sm.log.TemplateLayout","extends":"Sm.log.LayoutBase","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":["Sm.log.util.Assert"],"code_type":"ext_define","inheritable":false,"inheritdoc":null,"meta":{},"id":"class-Sm.log.TemplateLayout","members":{"cfg":[{"name":"exportFormattedLoggedObject","tagname":"cfg","owner":"Sm.log.LayoutBase","meta":{},"id":"cfg-exportFormattedLoggedObject"},{"name":"formatIndentLoggedObject","tagname":"cfg","owner":"Sm.log.LayoutBase","meta":{},"id":"cfg-formatIndentLoggedObject"},{"name":"highlightLoggedObject","tagname":"cfg","owner":"Sm.log.LayoutBase","meta":{},"id":"cfg-highlightLoggedObject"},{"name":"multilineLoggedObject","tagname":"cfg","owner":"Sm.log.LayoutBase","meta":{},"id":"cfg-multilineLoggedObject"},{"name":"timeFormat","tagname":"cfg","owner":"Sm.log.LayoutBase","meta":{},"id":"cfg-timeFormat"}],"property":[{"name":"jsonCls","tagname":"property","owner":"Sm.log.LayoutBase","meta":{"private":true},"id":"property-jsonCls"}],"method":[{"name":"constructor","tagname":"method","owner":"Sm.log.TemplateLayout","meta":{},"id":"method-constructor"},{"name":"appendFormattedData","tagname":"method","owner":"Sm.log.LayoutBase","meta":{"protected":true},"id":"method-appendFormattedData"},{"name":"applyTemplate","tagname":"method","owner":"Sm.log.TemplateLayout","meta":{"protected":true},"id":"method-applyTemplate"},{"name":"formatLogAsText","tagname":"method","owner":"Sm.log.TemplateLayout","meta":{"protected":true},"id":"method-formatLogAsText"},{"name":"formatLoggedObject","tagname":"method","owner":"Sm.log.LayoutBase","meta":{"protected":true},"id":"method-formatLoggedObject"},{"name":"formatMessage","tagname":"method","owner":"Sm.log.LayoutBase","meta":{"protected":true},"id":"method-formatMessage"},{"name":"formatTime","tagname":"method","owner":"Sm.log.LayoutBase","meta":{"protected":true},"id":"method-formatTime"},{"name":"getExportFormattedLoggedObject","tagname":"method","owner":"Sm.log.LayoutBase","meta":{},"id":"method-getExportFormattedLoggedObject"},{"name":"getFormatIndentLoggedObject","tagname":"method","owner":"Sm.log.LayoutBase","meta":{},"id":"method-getFormatIndentLoggedObject"},{"name":"getHighlightLoggedObject","tagname":"method","owner":"Sm.log.LayoutBase","meta":{},"id":"method-getHighlightLoggedObject"},{"name":"getMultilineLoggedObject","tagname":"method","owner":"Sm.log.LayoutBase","meta":{},"id":"method-getMultilineLoggedObject"},{"name":"getTimeFormat","tagname":"method","owner":"Sm.log.LayoutBase","meta":{},"id":"method-getTimeFormat"},{"name":"jsonLikeFormat","tagname":"method","owner":"Sm.log.LayoutBase","meta":{"protected":true},"id":"method-jsonLikeFormat"},{"name":"jsonSyntaxHighlight","tagname":"method","owner":"Sm.log.LayoutBase","meta":{"protected":true},"id":"method-jsonSyntaxHighlight"},{"name":"multiFormat","tagname":"method","owner":"Sm.log.LayoutBase","meta":{"protected":true},"id":"method-multiFormat"},{"name":"setExportFormattedLoggedObject","tagname":"method","owner":"Sm.log.LayoutBase","meta":{},"id":"method-setExportFormattedLoggedObject"},{"name":"setFormatIndentLoggedObject","tagname":"method","owner":"Sm.log.LayoutBase","meta":{},"id":"method-setFormatIndentLoggedObject"},{"name":"setHighlightLoggedObject","tagname":"method","owner":"Sm.log.LayoutBase","meta":{},"id":"method-setHighlightLoggedObject"},{"name":"setMultilineLoggedObject","tagname":"method","owner":"Sm.log.LayoutBase","meta":{},"id":"method-setMultilineLoggedObject"},{"name":"setTemplate","tagname":"method","owner":"Sm.log.TemplateLayout","meta":{},"id":"method-setTemplate"},{"name":"setTimeFormat","tagname":"method","owner":"Sm.log.LayoutBase","meta":{},"id":"method-setTimeFormat"},{"name":"simpleFormat","tagname":"method","owner":"Sm.log.LayoutBase","meta":{"protected":true},"id":"method-simpleFormat"}],"event":[],"css_var":[],"css_mixin":[]},"statics":{"cfg":[],"property":[],"method":[{"name":"getDefaultLayout","tagname":"method","owner":"Sm.log.TemplateLayout","meta":{"static":true},"id":"static-method-getDefaultLayout"}],"event":[],"css_var":[],"css_mixin":[]},"files":[{"filename":"TemplateLayout.js","href":"TemplateLayout.html#Sm-log-TemplateLayout"}],"html_meta":{},"component":false,"superclasses":["Ext.Base","Sm.log.LayoutBase"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='docClass'>Sm.log.LayoutBase</a><div class='subclass '><strong>Sm.log.TemplateLayout</strong></div></div></div><h4>Uses</h4><div class='dependency'><a href='#!/api/Sm.log.util.Assert' rel='Sm.log.util.Assert' class='docClass'>Sm.log.util.Assert</a></div><h4>Files</h4><div class='dependency'><a href='source/TemplateLayout.html#Sm-log-TemplateLayout' target='_blank'>TemplateLayout.js</a></div></pre><div class='doc-contents'><p>A layout that formats log data using an Extjs template.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-exportFormattedLoggedObject' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-exportFormattedLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-cfg-exportFormattedLoggedObject' class='name expandable'>exportFormattedLoggedObject</a><span> : Boolean</span></div><div class='description'><div class='short'>If set to true, the logged object will be output. ...</div><div class='long'><p>If set to true, the logged object will be output.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-formatIndentLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-formatIndentLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-cfg-formatIndentLoggedObject' class='name expandable'>formatIndentLoggedObject</a><span> : Number</span></div><div class='description'><div class='short'>Desired indentation used to format the logged object. ...</div><div class='long'><p>Desired indentation used to format the logged object.</p>\n\n<p>It might be ignored if the JSON formatter does not support\nindenting.</p>\n<p>Defaults to: <code>3</code></p></div></div></div><div id='cfg-highlightLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-highlightLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-cfg-highlightLoggedObject' class='name expandable'>highlightLoggedObject</a><span> : Boolean</span></div><div class='description'><div class='short'>If set to true, an attempt will be made to highlight the logged\nobject JSON-formatted. ...</div><div class='long'><p>If set to true, an attempt will be made to highlight the logged\nobject JSON-formatted.</p>\n\n<p>It might be ignored if the JSON formatter does not support\nhighlighting.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-multilineLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-multilineLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-cfg-multilineLoggedObject' class='name expandable'>multilineLoggedObject</a><span> : Boolean</span></div><div class='description'><div class='short'>If set to true, an attempt will be made to format the logged\nobject as a multiple line string. ...</div><div class='long'><p>If set to true, an attempt will be made to format the logged\nobject as a multiple line string.</p>\n\n<p>It might be ignored if the JSON formatter does not support\nmultiple line formatting.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-timeFormat' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-timeFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-cfg-timeFormat' class='name expandable'>timeFormat</a><span> : String</span></div><div class='description'><div class='short'>The format string used to format log time. ...</div><div class='long'><p>The format string used to format log time.</p>\n\n<p>See Ext.Date.format for information about this format string.</p>\n<p>Defaults to: <code>&quot;Y-m-d H:i:s.u&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-jsonCls' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-property-jsonCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-property-jsonCls' class='name expandable'>jsonCls</a><span> : Object</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>CSS styles used to highight logged object as JSON. ...</div><div class='long'><p>CSS styles used to highight logged object as JSON.</p>\n<p>Defaults to: <code>{key: &quot;sm-log-json-key&quot;, string: &quot;sm-log-json-string&quot;, number: &quot;sm-log-json-number&quot;, bool: &quot;sm-log-json-boolean&quot;, nul: &quot;sm-log-json-null&quot;}</code></p></div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Sm.log.TemplateLayout'>Sm.log.TemplateLayout</span><br/><a href='source/TemplateLayout.html#Sm-log-TemplateLayout-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Sm.log.TemplateLayout-method-constructor' class='name expandable'>Sm.log.TemplateLayout</a>( <span class='pre'>Object cfg</span> ) : Object</div><div class='description'><div class='short'>Create a new template layout. ...</div><div class='long'><p>Create a new template layout.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cfg</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href='#!/api/Sm.log.LayoutBase-method-constructor' rel='Sm.log.LayoutBase-method-constructor' class='docClass'>Sm.log.LayoutBase.constructor</a></p></div></div></div><div id='method-appendFormattedData' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-method-appendFormattedData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-appendFormattedData' class='name expandable'>appendFormattedData</a>( <span class='pre'><a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a> logEvent</span> ) : void<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Appends extra formatted data to the original log event. ...</div><div class='long'><p>Appends extra formatted data to the original log event.</p>\n\n<p>By default, it provides formattedTime and formattedMessage\nvalues, as well as a formattedLogObject if the appender is\nconfigured to log the loggedObject too.</p>\n\n<p>Derived classes might want to add data for the output destination\nto handle. For example, an output window might want to provide\na version of a formatted logged object that will be shown in a\nsingle line, and another one formatted in multiple line,\nto be shown in an expanded view.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>logEvent</span> : <a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a><div class='sub-desc'><p>The original log data.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-applyTemplate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Sm.log.TemplateLayout'>Sm.log.TemplateLayout</span><br/><a href='source/TemplateLayout.html#Sm-log-TemplateLayout-method-applyTemplate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.TemplateLayout-method-applyTemplate' class='name expandable'>applyTemplate</a>( <span class='pre'><a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a> logCopy</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Returns the text generated by applying the template to a log entry. ...</div><div class='long'><p>Returns the text generated by applying the template to a log entry.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>logCopy</span> : <a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a><div class='sub-desc'><p>The log data.</p>\n</div></li></ul></div></div></div><div id='method-formatLogAsText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Sm.log.TemplateLayout'>Sm.log.TemplateLayout</span><br/><a href='source/TemplateLayout.html#Sm-log-TemplateLayout-method-formatLogAsText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.TemplateLayout-method-formatLogAsText' class='name expandable'>formatLogAsText</a>( <span class='pre'><a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a> logEvent</span> ) : String<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Returns a text representing a whole log entry. ...</div><div class='long'><p>Returns a text representing a whole log entry.</p>\n\n<p>Very useful for line-oriented output, like a browser console window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>logEvent</span> : <a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a><div class='sub-desc'><p>The log data.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A text representing a whole log entry.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Sm.log.LayoutBase-method-formatLogAsText' rel='Sm.log.LayoutBase-method-formatLogAsText' class='docClass'>Sm.log.LayoutBase.formatLogAsText</a></p></div></div></div><div id='method-formatLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-method-formatLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-formatLoggedObject' class='name expandable'>formatLoggedObject</a>( <span class='pre'><a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a> logEvent</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Returns a formatted text corresponding to the logged object. ...</div><div class='long'><p>Returns a formatted text corresponding to the logged object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>logEvent</span> : <a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a><div class='sub-desc'><p>The log data.</p>\n</div></li></ul></div></div></div><div id='method-formatMessage' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-method-formatMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-formatMessage' class='name expandable'>formatMessage</a>( <span class='pre'><a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a> logEvent</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Formats the log message. ...</div><div class='long'><p>Formats the log message.</p>\n\n<p>This will use the extra formatting information provided in the log\nmethod call to return a formatted message. Take a look at this <a href=\"http://code.google.com/p/log4js-ext/wiki/LoggingFormatting\">wiki\nentry</a>\nfor examples on supported formatting.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>logEvent</span> : <a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a><div class='sub-desc'><p>The log data.</p>\n</div></li></ul></div></div></div><div id='method-formatTime' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-method-formatTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-formatTime' class='name expandable'>formatTime</a>( <span class='pre'><a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a> logEvent</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Formats the log time. ...</div><div class='long'><p>Formats the log time.</p>\n\n<p>If there is no timeFormat, calls toString.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>logEvent</span> : <a href=\"#!/api/Sm.log.LoggingEvent\" rel=\"Sm.log.LoggingEvent\" class=\"docClass\">Sm.log.LoggingEvent</a><div class='sub-desc'><p>The log data.</p>\n</div></li></ul></div></div></div><div id='method-getExportFormattedLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-exportFormattedLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-getExportFormattedLoggedObject' class='name expandable'>getExportFormattedLoggedObject</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Returns the value of exportFormattedLoggedObject. ...</div><div class='long'><p>Returns the value of <a href=\"#!/api/Sm.log.LayoutBase-cfg-exportFormattedLoggedObject\" rel=\"Sm.log.LayoutBase-cfg-exportFormattedLoggedObject\" class=\"docClass\">exportFormattedLoggedObject</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getFormatIndentLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-formatIndentLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-getFormatIndentLoggedObject' class='name expandable'>getFormatIndentLoggedObject</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Returns the value of formatIndentLoggedObject. ...</div><div class='long'><p>Returns the value of <a href=\"#!/api/Sm.log.LayoutBase-cfg-formatIndentLoggedObject\" rel=\"Sm.log.LayoutBase-cfg-formatIndentLoggedObject\" class=\"docClass\">formatIndentLoggedObject</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getHighlightLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-highlightLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-getHighlightLoggedObject' class='name expandable'>getHighlightLoggedObject</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Returns the value of highlightLoggedObject. ...</div><div class='long'><p>Returns the value of <a href=\"#!/api/Sm.log.LayoutBase-cfg-highlightLoggedObject\" rel=\"Sm.log.LayoutBase-cfg-highlightLoggedObject\" class=\"docClass\">highlightLoggedObject</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getMultilineLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-multilineLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-getMultilineLoggedObject' class='name expandable'>getMultilineLoggedObject</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Returns the value of multilineLoggedObject. ...</div><div class='long'><p>Returns the value of <a href=\"#!/api/Sm.log.LayoutBase-cfg-multilineLoggedObject\" rel=\"Sm.log.LayoutBase-cfg-multilineLoggedObject\" class=\"docClass\">multilineLoggedObject</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getTimeFormat' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-timeFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-getTimeFormat' class='name expandable'>getTimeFormat</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Returns the value of timeFormat. ...</div><div class='long'><p>Returns the value of <a href=\"#!/api/Sm.log.LayoutBase-cfg-timeFormat\" rel=\"Sm.log.LayoutBase-cfg-timeFormat\" class=\"docClass\">timeFormat</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-jsonLikeFormat' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-method-jsonLikeFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-jsonLikeFormat' class='name expandable'>jsonLikeFormat</a>( <span class='pre'>Object obj, Boolean highlight, Boolean multiline, Number indent</span> ) : String<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Returns a JSON string correponding to an object. ...</div><div class='long'><p>Returns a JSON string correponding to an object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object<div class='sub-desc'><p>The object to format.</p>\n</div></li><li><span class='pre'>highlight</span> : Boolean<div class='sub-desc'><p>If true, attempts to provide</p>\n\n<pre><code>             highlighting (html)\n</code></pre>\n</div></li><li><span class='pre'>multiline</span> : Boolean<div class='sub-desc'><p>Use multiple text lines?</p>\n</div></li><li><span class='pre'>indent</span> : Number<div class='sub-desc'><p>Indentation level (spaces)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A formatted JSON string representing an object.</p>\n</div></li></ul></div></div></div><div id='method-jsonSyntaxHighlight' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-method-jsonSyntaxHighlight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-jsonSyntaxHighlight' class='name expandable'>jsonSyntaxHighlight</a>( <span class='pre'>String json, Object jsonCls</span> ) : String<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Highlights and makes more readable a JSON string corresponding\nto a logged object. ...</div><div class='long'><p>Highlights and makes more readable a JSON string corresponding\nto a logged object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>json</span> : String<div class='sub-desc'><p>The json string corresponding to the logged object.</p>\n</div></li><li><span class='pre'>jsonCls</span> : Object<div class='sub-desc'><p>CSS classes used for highlighting.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A string representing the highlighted logged object.</p>\n</div></li></ul></div></div></div><div id='method-multiFormat' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-method-multiFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-multiFormat' class='name expandable'>multiFormat</a>( <span class='pre'>String str, Array formatParams</span> ) : String<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Formats a string depending on the format parameters a-la\nExt.Template. ...</div><div class='long'><p>Formats a string depending on the format parameters a-la\nExt.Template.</p>\n\n<p>It is a poor man's version of Ext.Template.apply(..) that is not very\nefficient <em>but</em> can cope with values not being present without\nreturning an empty string, unlike Ext.Template</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>The string to format.</p>\n</div></li><li><span class='pre'>formatParams</span> : Array<div class='sub-desc'><p>Formatting parameters</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The formatted string.</p>\n</div></li></ul></div></div></div><div id='method-setExportFormattedLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-exportFormattedLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-setExportFormattedLoggedObject' class='name expandable'>setExportFormattedLoggedObject</a>( <span class='pre'>Boolean exportFormattedLoggedObject</span> )</div><div class='description'><div class='short'>Sets the value of exportFormattedLoggedObject. ...</div><div class='long'><p>Sets the value of <a href=\"#!/api/Sm.log.LayoutBase-cfg-exportFormattedLoggedObject\" rel=\"Sm.log.LayoutBase-cfg-exportFormattedLoggedObject\" class=\"docClass\">exportFormattedLoggedObject</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>exportFormattedLoggedObject</span> : Boolean<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setFormatIndentLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-formatIndentLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-setFormatIndentLoggedObject' class='name expandable'>setFormatIndentLoggedObject</a>( <span class='pre'>Number formatIndentLoggedObject</span> )</div><div class='description'><div class='short'>Sets the value of formatIndentLoggedObject. ...</div><div class='long'><p>Sets the value of <a href=\"#!/api/Sm.log.LayoutBase-cfg-formatIndentLoggedObject\" rel=\"Sm.log.LayoutBase-cfg-formatIndentLoggedObject\" class=\"docClass\">formatIndentLoggedObject</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>formatIndentLoggedObject</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setHighlightLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-highlightLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-setHighlightLoggedObject' class='name expandable'>setHighlightLoggedObject</a>( <span class='pre'>Boolean highlightLoggedObject</span> )</div><div class='description'><div class='short'>Sets the value of highlightLoggedObject. ...</div><div class='long'><p>Sets the value of <a href=\"#!/api/Sm.log.LayoutBase-cfg-highlightLoggedObject\" rel=\"Sm.log.LayoutBase-cfg-highlightLoggedObject\" class=\"docClass\">highlightLoggedObject</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>highlightLoggedObject</span> : Boolean<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setMultilineLoggedObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-multilineLoggedObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-setMultilineLoggedObject' class='name expandable'>setMultilineLoggedObject</a>( <span class='pre'>Boolean multilineLoggedObject</span> )</div><div class='description'><div class='short'>Sets the value of multilineLoggedObject. ...</div><div class='long'><p>Sets the value of <a href=\"#!/api/Sm.log.LayoutBase-cfg-multilineLoggedObject\" rel=\"Sm.log.LayoutBase-cfg-multilineLoggedObject\" class=\"docClass\">multilineLoggedObject</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>multilineLoggedObject</span> : Boolean<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setTemplate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Sm.log.TemplateLayout'>Sm.log.TemplateLayout</span><br/><a href='source/TemplateLayout.html#Sm-log-TemplateLayout-method-setTemplate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.TemplateLayout-method-setTemplate' class='name expandable'>setTemplate</a>( <span class='pre'>String templateText</span> ) : void</div><div class='description'><div class='short'>Sets the template text for the underling Ext template. ...</div><div class='long'><p>Sets the template text for the underling Ext template.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>templateText</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setTimeFormat' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-cfg-timeFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-setTimeFormat' class='name expandable'>setTimeFormat</a>( <span class='pre'>String timeFormat</span> )</div><div class='description'><div class='short'>Sets the value of timeFormat. ...</div><div class='long'><p>Sets the value of <a href=\"#!/api/Sm.log.LayoutBase-cfg-timeFormat\" rel=\"Sm.log.LayoutBase-cfg-timeFormat\" class=\"docClass\">timeFormat</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>timeFormat</span> : String<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-simpleFormat' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Sm.log.LayoutBase' rel='Sm.log.LayoutBase' class='defined-in docClass'>Sm.log.LayoutBase</a><br/><a href='source/LayoutBase.html#Sm-log-LayoutBase-method-simpleFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.LayoutBase-method-simpleFormat' class='name expandable'>simpleFormat</a>( <span class='pre'>String str, Array formatParams</span> ) : String<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Format a string using the format parameters, a-la Ext.String.format. ...</div><div class='long'><p>Format a string using the format parameters, a-la Ext.String.format.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>The string to format.</p>\n</div></li><li><span class='pre'>formatParams</span> : Array<div class='sub-desc'><p>Formatting parameters</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The formatted String</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='static-method-getDefaultLayout' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Sm.log.TemplateLayout'>Sm.log.TemplateLayout</span><br/><a href='source/TemplateLayout.html#Sm-log-TemplateLayout-static-method-getDefaultLayout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Sm.log.TemplateLayout-static-method-getDefaultLayout' class='name expandable'>getDefaultLayout</a>( <span class='pre'></span> ) : <a href=\"#!/api/Sm.log.TemplateLayout\" rel=\"Sm.log.TemplateLayout\" class=\"docClass\">Sm.log.TemplateLayout</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Returns the default template layout, used by default by\nall appenders. ...</div><div class='long'><p>Returns the default template layout, used by default by\nall appenders.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Sm.log.TemplateLayout\" rel=\"Sm.log.TemplateLayout\" class=\"docClass\">Sm.log.TemplateLayout</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});